apiVersion: v1
kind: Service
metadata:
  name: nginx-service-01
spec:
  selector:
    app: nginx-deployment-01
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30050 

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment-01
spec:
  selector:
    matchLabels:
      app: nginx-deployment-01
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: nginx-deployment-01
    spec:
      containers:
      - name: nginx-pod
        image: nginx:1.14.2
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html  # /usr/share/nginx/html/index.html
          mountPath: /usr/share/nginx/html
        - name: conf-nginx # /etc/nginx/nginx.conf
          mountPath: /etc/nginx/nginx.conf
          readOnly: true
          subPath: nginx.conf
        - name: confd-conf # /etc/nginx/conf.d/default.conf
          mountPath: /etc/nginx/conf.d/default.conf
          readOnly: true
          subPath: default.conf
      volumes:
      - name: html
        hostPath:
          path: /usr/share/nginx/html
          type: Directory
      - name: conf-nginx
        configMap:
          name: nginx-conf
          items:
          - key: nginx-conf
            path: nginx.conf
      - name: confd-conf
        configMap:
          name: confd-conf
          items:
          - key: confd-conf
            path: default.conf
    
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: nginx-service-02
#spec:
#  selector:
#    app: nginx-deployment-02
#  type: NodePort
#  ports:
#  - port: 80
#    targetPort: 80
#    nodePort: 30060 
#
#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: nginx-deployment-02
#spec:
#  selector:
#    matchLabels:
#      app: nginx-deployment-02
#  replicas: 1 # tells deployment to run 2 pods matching the template
#  template:
#    metadata:
#      labels:
#        app: nginx-deployment-02
#    spec:
#      containers:
#      - name: nginx-pod
#        image: nginx:1.14.2
#        ports:
#        - containerPort: 80
#        volumeMounts:
#        - name: html  # /usr/share/nginx/html/index.html
#          mountPath: /usr/share/nginx/html
#        - name: conf-nginx # /etc/nginx/nginx.conf
#          mountPath: /etc/nginx/nginx.conf
#          readOnly: true
#          subPath: nginx.conf
#        - name: confd-conf # /etc/nginx/conf.d/default.conf
#          mountPath: /etc/nginx/conf.d/default.conf
#          readOnly: true
#          subPath: default.conf
#      volumes:
#      - name: html
#        hostPath:
#          path: /usr/share/nginx/html
#          type: Directory
#      - name: conf-nginx
#        configMap:
#          name: nginx-conf
#          items:
#          - key: nginx-conf
#            path: nginx.conf
#      - name: confd-conf
#        configMap:
#          name: confd-conf
#          items:
#          - key: confd-conf
#            path: default.conf

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx-conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;

      sendfile        on;
      #tcp_nopush     on;

      keepalive_timeout  65;

      #gzip  on;

      include /etc/nginx/conf.d/*.conf;
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: confd-conf
data:
  confd-conf: |
    upstream tomcat {
      server 10.99.42.204:8080;
    }
    server {
      listen       80;
      listen  [::]:80;
      server_name  localhost;
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            proxy_pass http://tomcat;

        }
    }

